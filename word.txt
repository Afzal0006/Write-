# make_words_file.py

# Pre-made mixed category words
programming_words = [
    ("python", "A popular programming language"),
    ("java", "A widely used programming language"),
    ("javascript", "Language for web development"),
    ("html", "Markup language for websites"),
    ("css", "Used for styling web pages"),
    ("react", "A JavaScript library for UI"),
    ("nodejs", "JavaScript runtime environment"),
    ("git", "Version control system"),
    ("linux", "An open-source operating system"),
    ("docker", "Tool for containerization"),
]

fruits = [
    ("apple", "A red or green fruit"),
    ("banana", "A yellow fruit"),
    ("orange", "A citrus fruit"),
    ("grape", "Small round purple or green fruit"),
    ("mango", "Sweet tropical fruit"),
    ("pineapple", "A tropical fruit with spiky skin"),
    ("watermelon", "Large green fruit with red pulp"),
    ("papaya", "Soft tropical fruit"),
    ("kiwi", "Small brown fruit with green flesh"),
    ("lemon", "A sour yellow fruit"),
]

animals = [
    ("dog", "A common household pet"),
    ("cat", "A small domesticated feline"),
    ("elephant", "Largest land animal"),
    ("lion", "Known as the king of the jungle"),
    ("tiger", "A striped big cat"),
    ("giraffe", "Tallest animal on land"),
    ("zebra", "Striped horse-like animal"),
    ("panda", "Black and white bear"),
    ("kangaroo", "Animal with a pouch from Australia"),
    ("penguin", "Flightless bird from cold regions"),
]

countries = [
    ("india", "A country in South Asia"),
    ("china", "Most populous country"),
    ("usa", "Country in North America"),
    ("france", "Known for Eiffel Tower"),
    ("germany", "Famous for engineering and cars"),
    ("japan", "Island country in East Asia"),
    ("brazil", "Largest country in South America"),
    ("australia", "Country and continent"),
    ("egypt", "Land of pyramids"),
    ("russia", "Largest country by land area"),
]

# Merge all lists and duplicate to reach ~2000 entries
all_words = programming_words + fruits + animals + countries

# Add some generic words to increase count
generic_words = []
for i in range(1, 1800):  # generates filler words
    generic_words.append((f"word{i}", f"Generic hint for word {i}"))

all_words.extend(generic_words)

# Save to words.txt
with open("words.txt", "w", encoding="utf-8") as f:
    for word, hint in all_words:
        f.write(f"{word}|{hint}\n")

print(f"âœ… words.txt created with {len(all_words)} entries")
